statement ok
drop table if exists t1;

statement ok
create table t1 (s varchar);

statement ok
insert into t1 values('abcde'), ('abce'), ('abcd['), ('abcd');

query T
select * from t1 where s like 'abcd%' order by s;
----
abcd
abcd[
abcde

query T
explain select * from t1 where s like 'abcd%' order by s;
----
Sort
├── output columns: [t1.s (#0)]
├── sort keys: [s ASC NULLS LAST]
├── estimated rows: 0.80
└── Filter
    ├── output columns: [t1.s (#0)]
    ├── filters: [is_true(t1.s (#0) >= 'abcd'), is_true(t1.s (#0) < 'abce')]
    ├── estimated rows: 0.80
    └── TableScan
        ├── table: default.default.t1
        ├── output columns: [s (#0)]
        ├── read rows: 4
        ├── read size: < 1 KiB
        ├── partitions total: 1
        ├── partitions scanned: 1
        ├── pruning stats: [segments: <range pruning: 1 to 1>, blocks: <range pruning: 1 to 1>]
        ├── push downs: [filters: [and_filters(t1.s (#0) >= 'abcd', t1.s (#0) < 'abce')], limit: NONE]
        └── estimated rows: 4.00

query T
select * from t1 where s like 'abcd' order by s;
----
abcd

query T
explain select * from t1 where s like 'abcd' order by s;
----
Sort
├── output columns: [t1.s (#0)]
├── sort keys: [s ASC NULLS LAST]
├── estimated rows: 2.00
└── Filter
    ├── output columns: [t1.s (#0)]
    ├── filters: [is_true(t1.s (#0) = 'abcd')]
    ├── estimated rows: 2.00
    └── TableScan
        ├── table: default.default.t1
        ├── output columns: [s (#0)]
        ├── read rows: 4
        ├── read size: < 1 KiB
        ├── partitions total: 1
        ├── partitions scanned: 1
        ├── pruning stats: [segments: <range pruning: 1 to 1>, blocks: <range pruning: 1 to 1, bloom pruning: 1 to 1>]
        ├── push downs: [filters: [is_true(t1.s (#0) = 'abcd')], limit: NONE]
        └── estimated rows: 4.00
