statement ok
drop table if exists t_where_optimizer

statement ok
create table if not exists t_where_optimizer (a int, b int)

statement ok
DROP FUNCTION IF EXISTS isnotempty;

statement ok
CREATE FUNCTION IF NOT EXISTS isnotempty AS(p) -> not(is_null(p));

query T
explain select a from t_where_optimizer where a = 1
----
TableScan
├── table: default.default.t_where_optimizer
├── output columns: [a (#0)]
├── read rows: 0
├── read size: 0
├── partitions total: 0
├── partitions scanned: 0
├── push downs: [filters: [is_true(t_where_optimizer.a (#0) = 1)], limit: NONE]
└── estimated rows: 0.00

query T
explain select a from t_where_optimizer where isnotempty(a)
----
TableScan
├── table: default.default.t_where_optimizer
├── output columns: [a (#0)]
├── read rows: 0
├── read size: 0
├── partitions total: 0
├── partitions scanned: 0
├── push downs: [filters: [NOT NOT is_not_null(t_where_optimizer.a (#0))], limit: NONE]
└── estimated rows: 0.00


query T
explain select * from t_where_optimizer where a = b
----
TableScan
├── table: default.default.t_where_optimizer
├── output columns: [a (#0), b (#1)]
├── read rows: 0
├── read size: 0
├── partitions total: 0
├── partitions scanned: 0
├── push downs: [filters: [is_true(t_where_optimizer.a (#0) = t_where_optimizer.b (#1))], limit: NONE]
└── estimated rows: 0.00

query T
explain select * from t_where_optimizer where a = 1 or b > 2
----
TableScan
├── table: default.default.t_where_optimizer
├── output columns: [a (#0), b (#1)]
├── read rows: 0
├── read size: 0
├── partitions total: 0
├── partitions scanned: 0
├── push downs: [filters: [is_true((t_where_optimizer.a (#0) = 1 OR t_where_optimizer.b (#1) > 2))], limit: NONE]
└── estimated rows: 0.00

query T
explain select * from t_where_optimizer where a = 1 and b > 2
----
TableScan
├── table: default.default.t_where_optimizer
├── output columns: [a (#0), b (#1)]
├── read rows: 0
├── read size: 0
├── partitions total: 0
├── partitions scanned: 0
├── push downs: [filters: [and_filters(t_where_optimizer.a (#0) = 1, t_where_optimizer.b (#1) > 2)], limit: NONE]
└── estimated rows: 0.00

query T
explain select * from t_where_optimizer where b = 1
----
TableScan
├── table: default.default.t_where_optimizer
├── output columns: [a (#0), b (#1)]
├── read rows: 0
├── read size: 0
├── partitions total: 0
├── partitions scanned: 0
├── push downs: [filters: [is_true(t_where_optimizer.b (#1) = 1)], limit: NONE]
└── estimated rows: 0.00

query T
explain select a from t_where_optimizer where b = 1
----
TableScan
├── table: default.default.t_where_optimizer
├── output columns: [a (#0)]
├── read rows: 0
├── read size: 0
├── partitions total: 0
├── partitions scanned: 0
├── push downs: [filters: [is_true(t_where_optimizer.b (#1) = 1)], limit: NONE]
└── estimated rows: 0.00

statement ok
drop table t_where_optimizer

statement ok
create table t_where_optimizer(id int, s tuple(a int not null, b int not null))

query T
explain select * from t_where_optimizer where s:a > 0
----
TableScan
├── table: default.default.t_where_optimizer
├── output columns: [id (#0), s (#1)]
├── read rows: 0
├── read size: 0
├── partitions total: 0
├── partitions scanned: 0
├── push downs: [filters: [t_where_optimizer.s:a (#3) > 0], limit: NONE]
└── estimated rows: 0.00

statement ok
drop table t_where_optimizer

statement ok
DROP FUNCTION IF EXISTS isnotempty;
