statement ok
set enable_distributed_copy_into = 1;

statement ok
drop table if exists products;

statement ok
drop table if exists parquet_table_;

statement ok
drop stage if exists parquet_stage_;

statement ok
drop table if exists table_random;

statement ok
drop table if exists table_random2;

statement ok
drop stage if exists s1;

statement ok
create stage s1 FILE_FORMAT = (TYPE = CSV);

statement ok
create table products (id int null, name string null, description string null);

statement ok
create table table_random(a int null,b string null,c string null) ENGINE = Random;

statement ok
create table table_random2(a int null,b string null) ENGINE = Random;

statement ok
copy into @s1 from (select a,b,c from table_random limit 1000000);

statement ok
copy into @s1 from (select a,b,c from table_random limit 1000000);

statement ok
copy into @s1 from (select a,b,c from table_random limit 1000000);

statement ok
copy into @s1 from (select a,b,c from table_random limit 1000000);

statement ok
copy into @s1 from (select a,b,c from table_random limit 1000000);

statement ok
copy into @s1 from (select a,b,c from table_random limit 1000000);

statement ok
copy into @s1 from (select a,b,c from table_random limit 1000000);

statement ok
copy into @s1 from (select a,b from table_random2 limit 1000000);

statement error 1046
copy into products from @s1 pattern = '.*[.]csv' purge = true;

query I
select count(*) from products;
----
0

statement ok
select block_count from fuse_snapshot('default','products');

statement ok
copy into products from (select $1,$2,$4 from @s1 as t2) force = true;

query I
select count(*) from products;
----
8000000

statement ok
truncate table products;

#statement ok
#set max_threads = 1;

#query T
#explain pipeline copy into products from (select $1,$2,$4 from @s1 as t2) force = true;
#----
#CommitSink × 1 processor
#  MutationAggregator × 1 processor
#    TransformSerializeSegment × 1 processor
#      TransformExchangeDeserializer × 1 processor
#        Merge (DummyTransform × 3 processors) to (TransformExchangeDeserializer × 1)
#          Merge (TransformSerializeBlock × 1 processor) to (Resize × 3)
#            TransformSerializeBlock × 1 processor
#              BlockCompactTransform × 1 processor
#                CastSchemaTransform × 1 processor
#                  CompoundBlockOperator(Project) × 1 processor
#                    CompoundBlockOperator(Project) × 1 processor
#                      DeserializeTransformer × 1 processor
#                        Resize × 1 processor
#                          Aligner × 1 processor

statement ok
copy into products from (select $1,$2,$3 from @s1 as t2) force =  true purge = true;

query I
select count(*) from products;
----
8000000

## add parquet_file_test
statement ok
create table parquet_table_(a int not null,b string not null,c string not null);

statement ok
create stage parquet_stage_ file_format = (type = parquet);

statement ok
copy into @parquet_stage_ from (select a,b,c from table_random limit 1000000);

statement ok
copy into @parquet_stage_ from (select a,b,c from table_random limit 1000000);

statement ok
copy into @parquet_stage_ from (select a,b,c from table_random limit 1000000);

statement ok
copy into @parquet_stage_ from (select a,b,c from table_random limit 1000000);

statement ok
copy into @parquet_stage_ from (select a,b,c from table_random limit 1000000);

statement ok
copy into @parquet_stage_ from (select a,b,c from table_random limit 1000000);

statement ok
copy into @parquet_stage_ from (select a,b,c from table_random limit 1000000);

statement ok
copy into @parquet_stage_ from (select a,b from table_random2 limit 1000000);

statement error
copy into parquet_table_ from @parquet_stage_;

query I
select count(*) from parquet_table_;
----
0

statement ok
set enable_distributed_copy_into = 0;
