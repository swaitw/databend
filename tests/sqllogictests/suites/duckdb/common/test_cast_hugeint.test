statement ok
drop table if exists working_floats

statement ok
drop table if exists broken_doubles

statement ok
drop table if exists working_doubles

statement ok
drop table if exists working_strings

statement ok
drop table if exists broken_floats

statement ok
drop table if exists powers_of_ten

statement ok
drop table if exists broken_strings

statement ok
CREATE TABLE working_floats(f FLOAT)

statement ok
CREATE TABLE broken_floats(f FLOAT)

statement ok
INSERT INTO working_floats VALUES (10.0), (-10.0), (32767.0), (-32767.0), (1.3), (-2.7), (2000000000.0), (-2000000000.0), (4000000000000000000.0), (-4000000000000000000.0), (1329227995784915872903807060280344576.0), (-1329227995784915872903807060280344576.0)

statement ok
INSERT INTO broken_floats VALUES (170141183460469231731687303715884105729.0), (-170141183460469231731687303715884105729.0)

# onlyif mysql
# query F
# SELECT f::FLOAT::FLOAT FROM working_floats
# ----
# 10.0
# -10.0
# 32767.0
# -32767.0
# 1.0
# -2.0
# 2000000000.0
# -2000000000.0
# 4.0e18
# -4.0e18
# 9.223372e18
# -9.223372e18

statement ok
CREATE TABLE working_doubles(f DOUBLE)

statement ok
CREATE TABLE broken_doubles(f DOUBLE)

statement ok
INSERT INTO working_doubles VALUES (10.0), (-10.0), (32767.0), (-32767.0), (1.3), (-2.7), (2000000000.0), (-2000000000.0), (4000000000000000000.0), (-4000000000000000000.0), (1329227995784915872903807060280344576.0), (-1329227995784915872903807060280344576.0)

statement ok
INSERT INTO broken_doubles VALUES (1361129467683753853853498429727072845824.0), (-1361129467683753853853498429727072845824.0), (1.0e100), (-1.0e100)

# onlyif mysql
# query F
# SELECT f::BIGINT::DOUBLE FROM working_doubles
# ----
# 10.0
# -10.0
# 32767.0
# -32767.0
# 1.0
# -2.0
# 2000000000.0
# -2000000000.0
# 4.0e18
# -4.0e18
# 9.223372036854776e18
# -9.223372036854776e18

# statement ok
# CREATE TABLE working_strings(f VARCHAR)

# statement ok
# CREATE TABLE broken_strings(f VARCHAR)

# statement ok
# INSERT INTO working_strings VALUES ('10'), ('-10'), ('-1329227995784915872903807060280344576'), ('170141183460469231731687303715884105727'), ('-170141183460469231731687303715884105727'), ('1.3'), ('-9223372036854775807.1293813'), ('1e18'), ('1e+18'), ('1.'), ('.1'), ('0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000'), ('1000e-40'), ('10000e-3')

# statement ok
# INSERT INTO broken_strings VALUES ('170141183460469231731687303715884105728'), ('-170141183460469231731687303715884105729'), ('10000000000000000000000000000000000000000000000000000000000000'), ('aaaa'), ('19A'), (''), ('1.A'), ('1.2382398723A'), ('1e++1'), ('1e+1+1'), ('1e+1-1'), ('+'), ('.'), ('.   '), ('10000000000e37')

# query I
# SELECT f::BIGINT FROM working_strings

# statement ok
# CREATE TABLE powers_of_ten(p VARCHAR)

# statement ok
# INSERT INTO powers_of_ten VALUES ('1'), ('10'), ('100'), ('1000'), ('10000'), ('100000'), ('1000000'), ('10000000'), ('100000000'), ('1000000000'), ('10000000000'), ('100000000000'), ('1000000000000'), ('10000000000000'), ('100000000000000'), ('1000000000000000'), ('10000000000000000'), ('100000000000000000'), ('1000000000000000000'), ('10000000000000000000'), ('100000000000000000000'), ('1000000000000000000000'), ('10000000000000000000000'), ('100000000000000000000000'), ('1000000000000000000000000'), ('10000000000000000000000000'), ('100000000000000000000000000'), ('1000000000000000000000000000'), ('10000000000000000000000000000'), ('100000000000000000000000000000'), ('1000000000000000000000000000000'), ('10000000000000000000000000000000'), ('100000000000000000000000000000000'), ('1000000000000000000000000000000000'), ('10000000000000000000000000000000000'), ('100000000000000000000000000000000000'), ('1000000000000000000000000000000000000'), ('10000000000000000000000000000000000000'), ('100000000000000000000000000000000000000'), ('-1'), ('-10'), ('-100'), ('-1000'), ('-10000'), ('-100000'), ('-1000000'), ('-10000000'), ('-100000000'), ('-1000000000'), ('-10000000000'), ('-100000000000'), ('-1000000000000'), ('-10000000000000'), ('-100000000000000'), ('-1000000000000000'), ('-10000000000000000'), ('-100000000000000000'), ('-1000000000000000000'), ('-10000000000000000000'), ('-100000000000000000000'), ('-1000000000000000000000'), ('-10000000000000000000000'), ('-100000000000000000000000'), ('-1000000000000000000000000'), ('-10000000000000000000000000'), ('-100000000000000000000000000'), ('-1000000000000000000000000000'), ('-10000000000000000000000000000'), ('-100000000000000000000000000000'), ('-1000000000000000000000000000000'), ('-10000000000000000000000000000000'), ('-100000000000000000000000000000000'), ('-1000000000000000000000000000000000'), ('-10000000000000000000000000000000000'), ('-100000000000000000000000000000000000'), ('-1000000000000000000000000000000000000'), ('-10000000000000000000000000000000000000'), ('-100000000000000000000000000000000000000')

# query I
# SELECT p::BIGINT FROM powers_of_ten

# query I
# SELECT p::BIGINT::VARCHAR FROM powers_of_ten

query II
SELECT typeof(18446744073709551615), 18446744073709551615
----
BIGINT UNSIGNED   18446744073709551615

# query II
# SELECT typeof(4832904823908104981209840981240981277), 4832904823908104981209840981240981277

# query II
# SELECT typeof(48329048239081049812098409812409812772), 48329048239081049812098409812409812772

# query II
# SELECT typeof(483290482390810498120984098124098127725), 483290482390810498120984098124098127725

# query II
# SELECT typeof(4832904823908104981209840981240981277256), 4832904823908104981209840981240981277256

# query II
# SELECT typeof(48329048239081049812098409812409812772568), 48329048239081049812098409812409812772568

# query II
# SELECT typeof(483290482390810498120984098124098127725683), 483290482390810498120984098124098127725683

query T
SELECT 0::BIGINT::VARCHAR
----
0

query I
select '255'::BIGINT::UINT8
----
255

# TODO https://github.com/datafuselabs/databend/issues/7347
# statement error xxx
# select '-1'::BIGINT::uint8

# TODO https://github.com/datafuselabs/databend/issues/7347
# statement error xxx
# select '256'::BIGINT::uint8

query I
select '65535'::BIGINT::UINT16
----
65535

# TODO https://github.com/datafuselabs/databend/issues/7347
# statement error xxx
# select '-1'::BIGINT::uint16

# TODO https://github.com/datafuselabs/databend/issues/7347
# statement error xxx
# select '65536'::BIGINT::uint16

query I
select '4294967295'::BIGINT::UINT32
----
4294967295

# TODO https://github.com/datafuselabs/databend/issues/7347
# statement error xxx
# select '-1'::BIGINT::uint32

# TODO https://github.com/datafuselabs/databend/issues/7347
# query I
# select '4294967296'::BIGINT::uint32

# ----
# 4294967295

statement error 1006
select '18446744073709551615'::BIGINT::UINT64

# TODO https://github.com/datafuselabs/databend/issues/7347
# statement error XXX
# select '-1'::BIGINT::UINT64

statement error 1006
select '18446744073709551616'::BIGINT::UINT64

query I
select '255'::UINT8::BIGINT
----
255

query I
select '65535'::UINT16::BIGINT
----
65535

query I
select '4294967295'::UINT32::BIGINT
----
4294967295

# TODO https://github.com/datafuselabs/databend/issues/7347
# query I
# select '18446744073709551615'::UINT64::BIGINT

# ----
# 18446744073709551615

