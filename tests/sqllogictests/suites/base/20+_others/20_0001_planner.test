query I
select * from numbers(10) order by number
----
0
1
2
3
4
5
6
7
8
9


query II
select number as a, number + 1 as b from numbers(1)
----
0 1


query II
select number as a, number + 1 as b from numbers(1) group by a, number order by number
----
0 1


query I
select extract(day from to_date('2022-05-13'))
----
13

query I
select date_part(day, to_date('2022-05-13'))
----
13

query I
select extract(week from to_timestamp('2016-01-02T23:39:20.123-07:00'))
----
53

query I
select date_part(week, to_timestamp('2016-01-02T23:39:20.123-07:00'))
----
53

query T
select date_trunc(month, to_date('2022-07-07'))
----
2022-07-01


query T
select date_trunc('month', to_date('2022-07-07'))
----
2022-07-01


query I
select * from numbers(10) where number between 1 and 9 and number > 2 and number < 8 and number is not null and number = 5 and number >= 5 and number <= 5
----
5


query I
select * from numbers(10) where cast(number as string) = '5'
----
5


query I
select * from numbers(10) where try_cast(number as string) = '5'
----
5


query F
select (number + 1 - 2) * 3 / 4 from numbers(1)
----
-0.75


query F
select sin(cos(number)) from numbers(1)
----
0.8414709848078965


query I
select * from numbers(5) where number in (1, 3)
----
1
3


query T
select parse_json('{"k1": [0, 1, 2]}'): k1[2]
----
2


query T
select parse_json('{"k1": [0, 1, 2]}')['k1'][2]
----
2


query T
select parse_json('{"k1": {"k2": [0, 1, 2]}}'): k1.k2[2]
----
2


statement ok
drop table if exists t


statement ok
create table t(a int, b int)


statement ok
insert into t values(1, 2), (2, 3), (3, 4)


query I
select sum(a) + 1 from t group by a order by a
----
2
3
4


query I
select sum(a) from t group by a order by a
----
1
2
3


query I
select sum(a) from t
----
6


query I
select count(a) from t group by a order by a
----
1
1
1


query I
select count(a) from t
----
3


query I
select count() from t
----
3


query I
select count() from t group by a order by a
----
1
1
1


query I
select count(1) from t
----
3


query I
select count(1) from t group by a order by a
----
1
1
1


query I
select count(*) from t
----
3


query I
select sum(a) as sum from t group by a having sum(a) > 1 order by sum
----
2
3


query I
select sum(a+1) as sum from t group by a+1 having sum(a+1) = 2 order by sum
----
2


query I
select sum(a+1) as SuM from t group by a+1, b having sum(a+1) > 3 order by sum, SUM + 1
----
4


statement ok
drop table t


query II
select 1, sum(number) from numbers_mt(1000000)
----
1 499999500000


query B
select count(*) = count(1) from numbers(1000)
----
1




query I
select count(1) from numbers(1000)
----
1000


query I
select sum(3) from numbers(1000)
----
3000


query I
select count(null) from numbers(1000)
----
0


query I
SELECT max(number) FROM numbers_mt (10) where number > 99999999998
----
NULL


query I
SELECT max(number) FROM numbers_mt (10) where number > 2
----
9


query II
SELECT number%3 as c1, number%2 as c2 FROM numbers_mt(10000) where number > 2 group by number%3, number%2 order by c1,c2
----
0 0
0 1
1 0
1 1
2 0
2 1


query I
SELECT number%3 as c1 FROM numbers_mt(10) where number > 2 group by number%3 order by c1
----
0
1
2


statement ok
CREATE TABLE t(a UInt64 null, b UInt32 null, c UInt32) Engine = Fuse


statement ok
INSERT INTO t(a,b, c)  SELECT if (number % 3 = 1, null, number) as a, number + 3 as b, number + 4 as c FROM numbers(10)


query II
SELECT a%3 as a1, count(1) as ct from t GROUP BY a1 ORDER BY a1,ct
----
0 4
2 3
NULL 3


query III
SELECT a%2 as a1, a%3 as a2, count(0) as ct FROM t GROUP BY a1, a2 ORDER BY a1, a2
----
0 0 2
0 2 2
1 0 2
1 2 1
NULL NULL 3


query III
SELECT a%2 as a1, to_uint64(c % 3) as c1, count(0) as ct FROM t GROUP BY a1, c1 ORDER BY a1, c1, ct
----
0 0 2
0 1 2
1 0 1
1 1 2
NULL 2 3


query III
SELECT to_uint64(c % 3) as c1, a%2 as a1, count(0) as ct FROM t GROUP BY a1, c1 ORDER BY a1, c1, ct
----
0 0 2
1 0 2
0 1 1
1 1 2
2 NULL 3


query I
select number%2 as b from numbers(5) group by number % 2 having count(*) = 3 and sum(number) > 5
----
0


query I
select count(*) from numbers(5) group by number % 2 having number % 2 + 1 = 2
----
2


query II
select number, sum(number) from numbers(10) group by 1, number having sum(number) = 5
----
5 5


query I
SELECT arg_min(user_name, salary)  FROM (SELECT sum(number) AS salary, number%3 AS user_name FROM numbers_mt(10000) GROUP BY user_name)
----
1


query I
select sum_distinct(number) from ( select number % 100 as number from numbers(100000))
----
4950


query I
select count_distinct(number) from ( select number % 100 as number from numbers(100000))
----
100


query I
select approx_count_distinct(number) from ( select number % 100 as number from numbers(100000))
----
100


query B
select sum_distinct(number) /  count_distinct(number) = avg_distinct(number) from ( select number % 100 as number from numbers(100000))
----
1




query I
select sum_if(number, number >= 100000 - 1) from numbers(100000)
----
99999


query B
select sum_if(number, number > 100) /  count_if(number,  number > 100) = avg_if(number,  number > 100) from numbers(100000)
----
1




query I
select count_if(number, number>9) from numbers(10)
----
0


query I
select sum((number > 314)::uint32) from numbers(1000)
----
685


query F
select avg((number > 314)::uint32) from numbers(1000)
----
0.685


statement ok
drop table t


query I
select number as a from numbers(1) group by a having a = 0
----
0


query I
select number+1 as a from numbers(1) group by a having a = 1
----
1

query II
SELECT number%3 as c1, number%2 as c2 FROM numbers_mt (10) order by c1 desc, c2 asc
----
2 0
2 0
2 1
1 0
1 1
1 1
0 0
0 0
0 1
0 1


query IT
SELECT number, null from numbers(3) order by number desc
----
2 NULL
1 NULL
0 NULL


query II
SELECT number%3 as c1, number%2 as c2 FROM numbers_mt (10) order by c1, number desc
----
0 1
0 0
0 1
0 0
1 1
1 0
1 1
2 0
2 1
2 0


query I
SELECT SUM(number) AS s FROM numbers_mt(10) GROUP BY number ORDER BY s
----
0
1
2
3
4
5
6
7
8
9

statement ok
drop table if exists t3

statement ok
create table t3(a int, b int)


statement ok
insert into t3 values(1,2),(2,3)


query II
select * from t3 order by 2 desc
----
2 3
1 2


query I
select a from t3 order by 1 desc
----
2
1


query I
select a from t3 order by t3.a + 1
----
1
2


query I
select number from numbers(3) order by number + 1
----
0
1
2


query I
select number + 3 as c from numbers(3) order by c + 1, -number
----
3
4
5


query IF
select number, avg(number) c from numbers(3) group by number order by c + 1, number + 1
----
0 0.0
1 1.0
2 2.0

statement ok
drop table t3

query I
select 1 + 1
----
2


query I
select to_int32(8)
----
8


query I
select number from numbers(100) order by number asc limit 10
----
0
1
2
3
4
5
6
7
8
9


query I
select number*2 as number from numbers(100) order by number limit 10
----
0
2
4
6
8
10
12
14
16
18


query I
select number from numbers(100) order by number asc limit 9, 11
----
9
10
11
12
13
14
15
16
17
18
19


query I
select number-2 as number from numbers(100) order by number asc limit 10, 10
----
8
9
10
11
12
13
14
15
16
17


query I
select number from numbers(100) order by number asc limit 10 offset 10
----
10
11
12
13
14
15
16
17
18
19


query F
select number/2 as number from numbers(100) order by number asc limit 10 offset 10
----
5.0
5.5
6.0
6.5
7.0
7.5
8.0
8.5
9.0
9.5


query I
select number from numbers(10) order by number asc offset 5
----
5
6
7
8
9


query I
select number+number as number from numbers(10) order by number asc offset 5
----
10
12
14
16
18


query I
select number from numbers(10000) order by number limit 1
----
0


statement ok
drop table if exists temp


statement ok
create table temp (a int) engine = FUSE


statement ok
insert into temp values (1)


query I
select a from temp
----
1


statement ok
drop table temp


query IIII
select count_if(a = '1'), count_if(a = '2'), count_if(a = '3'), count_if(a is null) from (	SELECT (CASE WHEN number % 4 = 1 THEN '1' WHEN number % 4 = 2 THEN '2' WHEN number % 4 = 3 THEN '3' END) as a FROM numbers(100))
----
25 25 25 25


query T
select case when number >= 2 then 'ge2' WHEN number >= 1 then 'ge1' ELSE null end from numbers(3) order by number
----
NULL
ge1
ge2


query F
select case when 1 = 3 then null when 1 = 2 then 20.0 when 1 = 1 then 1 ELSE null END
----
1.0


statement ok
select case when number > 1 then 1 when number < 1 then 2 else 1 end from numbers(2) where false


query I
select COALESCE(NULL, NULL, 1, 2)
----
1


statement ok
create table t(a int, b int)


statement ok
insert into t values(1, 2),(2, 3)


query I
select t1.a from (select * from t) as t1 order by t1.a
----
1
2


query III
SELECT a,b,count() from (SELECT cast((number%4) AS bigint) as a, cast((number%20) AS bigint) as b from numbers(100)) group by a,b order by a,b limit 3
----
0 0 5
0 4 5
0 8 5


statement ok
drop table t


statement ok
use default


query T
select database()
----
default


query I
SELECT DISTINCT * FROM numbers(3) ORDER BY  number
----
0
1
2


query I
SELECT DISTINCT 1 FROM numbers(3)
----
1


query I
SELECT DISTINCT (number %3) as c FROM numbers(1000) ORDER BY c
----
0
1
2


query I
SELECT DISTINCT count(number %3) as c FROM numbers(10)  group by number % 3 ORDER BY c
----
3
4

query I
select [1, 2, 3]
----
[1,2,3]


query T
select []
----
[]


query T
select [[1, 2, 3],[1, 2, 3]]
----
[[1,2,3],[1,2,3]]


query I
select * from numbers(10) as t where exists (select * from numbers(2) as t1 where t.number = t1.number) order by t.number
----
0
1


query I
select (select number from numbers(10) as t1 where t.number = t1.number) from numbers(10) as t order by number
----
0
1
2
3
4
5
6
7
8
9


query I
SELECT POSITION('bar' IN 'foobarbar')
----
4


query I
SELECT POSITION('xbar' IN 'foobar')
----
0


statement ok
drop table if exists t


statement ok
create table t (a varchar)


statement ok
insert into t values ('foo')


query I
select POSITION('o' IN t.a) from t
----
2


statement ok
drop table t


query T
select ('field', number) from numbers(5) order by number
----
('field',0)
('field',1)
('field',2)
('field',3)
('field',4)


statement ok
drop view if exists temp


statement ok
create view temp as select number from numbers(1)


query I
select number from temp
----
0


statement ok
drop view temp

statement ok
drop table if exists t1;

statement ok
drop table if exists t2;

statement ok
create table t1(a int, b int)


statement ok
create table t2(c int, d int)


statement ok
insert into t1 values(1, 2), (2, 3), (3 ,4)


statement ok
insert into t2 values(2,2), (3, 5), (7 ,8)


query IIII
select * from t1, t2 order by a, c
----
1 2 2 2
1 2 3 5
1 2 7 8
2 3 2 2
2 3 3 5
2 3 7 8
3 4 2 2
3 4 3 5
3 4 7 8


statement ok
drop table t1


statement ok
drop table t2


query II
select 3 as a, 4 as a
----
3 4


statement ok
CREATE FUNCTION a_plus_3 AS (a) -> a+3


query I
SELECT a_plus_3(2)
----
5


statement ok
CREATE FUNCTION cal1 AS (a,b,c,d,e) -> a + c * (e / b) - d


query F
SELECT cal1(1, 2, 3, 4, 6)
----
6.0


statement ok
CREATE FUNCTION notnull1 AS (p) -> not(is_null(p))


query B
SELECT notnull1(null)
----
0




query B
SELECT notnull1('null')
----
1




statement ok
drop function a_plus_3


statement ok
drop function cal1


statement ok
drop function notnull1


statement ok
create table t1(a int, b int)


statement ok
create table t2(c int, d int)


statement ok
insert into t1 values(1, 2), (2, 3), (3 ,4), (2, 3)


statement ok
insert into t2 values(2,2), (3, 5), (7 ,8), (2, 3), (3, 4)


query II
select * from t1 intersect select * from t2 order by t1.a, t1.b
----
2 3
3 4


query II
select * from t1 except select * from t2 order by t1.a, t1.b
----
1 2


statement ok
drop table t1


statement ok
drop table t2

statement ok
create table n( a int null, b int null)


statement ok
insert into n select  if ((number % 3)::boolean, null, number), if ((number % 2)::boolean, null, number) from numbers(10)


query IBIB
select a + b, a and b, a - b, a or b as c from n order by c nulls first
----
NULL NULL NULL NULL
NULL NULL NULL NULL
NULL NULL NULL NULL
0 0 0 0
NULL NULL NULL 1
NULL NULL NULL 1
NULL NULL NULL 1
12 1 0 1
NULL NULL NULL 1
NULL NULL NULL 1


statement ok
drop table n


query I
select * from numbers(5) as t where exists (select * from numbers(3) where number = t.number) ORDER BY number
----
0
1
2


query I
select * from numbers(5) as t where not exists (select * from numbers(3) where number = t.number) order by number
----
3
4


query I
select * from numbers(5) as t where exists (select number as a from numbers(3) where number = t.number and number > 0 and t.number < 2)
----
1


query I
select * from numbers(5) as t where exists (select * from numbers(3) where number > t.number) order by number
----
0
1


statement ok
create table t1(a int, b int)


statement ok
create table t2(a int, b int)


statement ok
insert into t1 values(1, 2), (2, 3)


statement ok
insert into t2 values(3, 4), (2, 3)


query II
select * from t1 where t1.a not in (select t2.a from t2)
----
1 2


query II
select * from t1 where t1.a in (select t2.a from t2)
----
2 3


query II
select * from t1 where t1.a = any (select t2.a from t2)
----
2 3


query II
select * from t1 where t1.a = some (select t2.a from t2)
----
2 3


query II
select * from t1 where t1.a != all (select t2.a from t2)
----
1 2


query II
select * from t1 where t1.a >= any (select t2.a from t2)
----
2 3

query II
select * from t2 right semi join t1 on t1.a >= t2.a
----
2 3

statement ok
select * from t1 where t1.a = all (select t2.a from t2)




statement ok
create table t3 as select *  from numbers(10000)


statement ok
insert into t3 values(1)



query I
select count(*) from numbers(10000) as t4 where t4.number in (select t3.number from t3)
----
10000


query I
select * from numbers(10) where number in (select * from numbers(5)) order by number
----
0
1
2
3
4

statement ok
drop table t1


statement ok
drop table t2


statement ok
drop table t3

query TTT
select database(), currentDatabase(), current_database()
----
default default default


query TTT
select user(), currentuser(), current_user()
----
'root'@'%' 'root'@'%' 'root'@'%'


query TTTT
SELECT database, table, name, type FROM system.columns  WHERE database LIKE 'system'  AND table LIKE 'settings' ORDER BY name
----
system settings default String
system settings description String
system settings level String
system settings name String
system settings range String
system settings type String
system settings value String


statement ok
create table t1(a int null , b int null)


statement ok
insert into t1 values(1, 2), (2, 3), (null, 1)


statement ok
create table t2(a int null, b int null)


statement ok
insert into t2 values(3, 4), (2, 3), (null, 2)


query II
select t1.a, (select t2.a from t2 where t1.a > 1 and t2.a > 2) from t1 order by t1.a
----
1 NULL
2 3
NULL NULL


statement ok
select t1.a from t1 where t1.a > (select t2.a from t2 where t1.a = t2.a )


query I
select t1.a from t1 where exists (select t2.a from t2 where t1.a = t2.a) or t1.b > 1 order by t1.a
----
1
2


query I
select t1.a from t1 where exists (select t2.a from t2 where t1.a = t2.a) and t1.b > 1
----
2


query I
select t1.a from t1 where not exists (select t2.a from t2 where t1.a = t2.a) and t1.b > 1
----
1


query II
select * from t1 where t1.a = any (select t2.a from t2 where t1.a = t2.a)
----
2 3


query II
select * from t1 where t1.a = any (select t2.a from t2 where t1.a > 1)
----
2 3


statement ok
select * from t1 where t1.a > any (select t2.a from t2 where t1.a > 1)


query II
select t1.a, (select t2.a from t2 where t2.a > 2) from t1 order by t1.a
----
1 3
2 3
NULL 3


query II
select t1.a, (select t2.a from t2 where t2.a > 3) from t1 order by t1.a
----
1 NULL
2 NULL
NULL NULL


statement ok
select t1.a from t1 where t1.a > (select t2.a from t2 where t2.a > 2)


statement ok
drop table t1


statement ok
drop table t2
