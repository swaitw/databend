statement ok
CREATE DATABASE IF NOT EXISTS test_window_range

statement ok
USE test_window_range

# Test cases from DuckDB test_window_range.test

statement ok
DROP TABLE IF EXISTS t1;

statement ok
CREATE TABLE t1(a FLOAT, b INTEGER);

statement ok
INSERT INTO t1 VALUES
  (5, 10), (10, 20), (13, 26), (13, 26),
  (15, 30), (20, 40), (22,80), (30, 90);

# Binding errors
statement error
SELECT CAST(a AS INTEGER), sum(b) OVER win FROM t1 WINDOW win AS ( ORDER BY a, b RANGE BETWEEN 5 PRECEDING AND 5 FOLLOWING )

statement error
SELECT CAST(a AS INTEGER), sum(b) OVER win FROM t1 WINDOW win AS ( ORDER BY a RANGE BETWEEN 'a' PRECEDING AND 'a' FOLLOWING )

# SQLite RANGE queries
query II
SELECT CAST(a AS INTEGER), sum(b) OVER win FROM t1 WINDOW win AS ( ORDER BY a RANGE BETWEEN 5 PRECEDING AND 5 FOLLOWING )
----
5	30
10	112
13	102
13	102
15	142
20	150
22	120
30	90

query II
SELECT CAST(a AS INTEGER), sum(b) OVER win FROM t1 WINDOW win AS ( ORDER BY a RANGE BETWEEN 10 PRECEDING AND 5 PRECEDING )
----
5	NULL
10	10
13	10
13	10
15	30
20	102
22	82
30	120

query II
SELECT CAST(a AS INTEGER), sum(b) OVER win FROM t1 WINDOW win AS ( ORDER BY a RANGE BETWEEN 2 FOLLOWING AND 3 FOLLOWING )
----
5	NULL
10	52
13	30
13	30
15	NULL
20	80
22	NULL
30	NULL

query II
SELECT CAST(a AS INTEGER), sum(b) OVER win FROM t1 WINDOW win AS ( ORDER BY a DESC RANGE BETWEEN 5 PRECEDING AND 5 FOLLOWING )
----
30	90
22	120
20	150
15	142
13	102
13	102
10	112
5	30

query II
SELECT CAST(a AS INTEGER), sum(b) OVER win FROM t1 WINDOW win AS ( ORDER BY a DESC RANGE BETWEEN 10 PRECEDING AND 5 PRECEDING )
----
30	NULL
22	90
20	90
15	120
13	120
13	120
10	70
5	102

query II
SELECT CAST(a AS INTEGER), sum(b) OVER win FROM t1 WINDOW win AS ( ORDER BY a DESC RANGE BETWEEN 2 FOLLOWING AND 3 FOLLOWING )
----
30	NULL
22	40
20	NULL
15	52
13	20
13	20
10	NULL
5	NULL

query II
SELECT CAST(a AS INTEGER), sum(b) OVER win FROM t1 WINDOW win AS ( ORDER BY a RANGE BETWEEN 5.1 PRECEDING AND 5.3 FOLLOWING )
----
5	30
10	112
13	102
13	102
15	142
20	150
22	120
30	90

query II
SELECT CAST(a AS INTEGER), sum(b) OVER win FROM t1 WINDOW win AS ( ORDER BY a RANGE BETWEEN 10.2 PRECEDING AND 5.4 PRECEDING )
----
5	NULL
10	NULL
13	10
13	10
15	10
20	72
22	82
30	120

query II
SELECT CAST(a AS INTEGER), sum(b) OVER win FROM t1 WINDOW win AS ( ORDER BY a RANGE BETWEEN 2.6 FOLLOWING AND 3.5 FOLLOWING )
----
5	NULL
10	52
13	NULL
13	NULL
15	NULL
20	NULL
22	NULL
30	NULL

query II
SELECT CAST(a AS INTEGER), sum(b) OVER win FROM t1 WINDOW win AS ( ORDER BY a DESC RANGE BETWEEN 5.7 PRECEDING AND 5.8 FOLLOWING )
----
30	90
22	120
20	150
15	142
13	102
13	102
10	112
5	30

query II
SELECT CAST(a AS INTEGER), sum(b) OVER win FROM t1 WINDOW win AS ( ORDER BY a DESC RANGE BETWEEN UNBOUNDED PRECEDING AND 5.9 PRECEDING )
----
30	NULL
22	90
20	90
15	170
13	210
13	210
10	210
5	292

query II
SELECT CAST(a AS INTEGER), sum(b) OVER win FROM t1 WINDOW win AS ( ORDER BY a DESC RANGE BETWEEN 2.1 FOLLOWING AND UNBOUNDED FOLLOWING )
----
30	232
22	112
20	112
15	30
13	30
13	30
10	10
5	NULL

query II
SELECT CAST(a AS INTEGER), sum(b) OVER win FROM t1 WINDOW win AS ( ORDER BY a RANGE 5.1 PRECEDING )
----
5	10
10	30
13	72
13	72
15	102
20	70
22	120
30	90

#==========================================================================

statement ok
DROP TABLE IF EXISTS t1;

statement ok
CREATE TABLE t1(a INTEGER NULL, b INTEGER);

statement ok
INSERT INTO t1 VALUES
    (NULL, 1), (NULL, 2), (NULL, 3), (10, 4), (10, 5);

query I
SELECT sum(b) OVER (
    ORDER BY a RANGE BETWEEN 5 PRECEDING AND 10 FOLLOWING
  ) FROM t1 ORDER BY 1;
----
6
6
6
9
9

query I
SELECT sum(b) OVER (
    ORDER BY a DESC RANGE BETWEEN 5 PRECEDING AND 10 FOLLOWING
  ) FROM t1 ORDER BY 1;
----
6
6
6
9
9

query I
SELECT sum(b) OVER (
    ORDER BY a RANGE BETWEEN 5 FOLLOWING AND 10 FOLLOWING
  ) FROM t1 ORDER BY 1 NULLS FIRST;
----
NULL
NULL
6
6
6

query I
SELECT sum(b) OVER (
    ORDER BY a RANGE BETWEEN 5 FOLLOWING AND 10 FOLLOWING
  ) FROM t1 ORDER BY 1 NULLS LAST;
----
6
6
6
NULL
NULL

query I
SELECT sum(b) OVER (
    ORDER BY a DESC RANGE BETWEEN 5 FOLLOWING AND 10 FOLLOWING
  ) FROM t1 ORDER BY 1 NULLS FIRST;
----
NULL
NULL
6
6
6

query I
SELECT sum(b) OVER (
    ORDER BY a DESC RANGE BETWEEN 5 FOLLOWING AND 10 FOLLOWING
  ) FROM t1 ORDER BY 1 NULLS LAST;
----
6
6
6
NULL
NULL

query I
SELECT sum(b) OVER (
    ORDER BY a NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND 10 FOLLOWING
  ) FROM t1 ORDER BY 1 NULLS FIRST;
----
6
6
6
15
15

query I
SELECT sum(b) OVER (
    ORDER BY a NULLS LAST RANGE BETWEEN UNBOUNDED PRECEDING AND 10 FOLLOWING
  ) FROM t1 ORDER BY 1 NULLS LAST;
----
9
9
15
15
15

query I
SELECT sum(b) OVER (
    ORDER BY a ASC  NULLS LAST RANGE BETWEEN UNBOUNDED PRECEDING AND 10 FOLLOWING
  ) FROM t1 ORDER BY 1 NULLS LAST;
----
9
9
15
15
15

query I
SELECT sum(b) OVER (
    ORDER BY a DESC NULLS FIRST RANGE
    BETWEEN UNBOUNDED PRECEDING AND 10 FOLLOWING
  ) FROM t1 ORDER BY 1 NULLS LAST;
----
6
6
6
15
15

#==========================================================================

statement ok
DROP TABLE IF EXISTS t2;

statement ok
CREATE TABLE t2(a INTEGER, b INTEGER NULL);

statement ok
INSERT INTO t2 VALUES(1, 65);

statement ok
INSERT INTO t2 VALUES(2,	NULL);

statement ok
INSERT INTO t2 VALUES(3,	NULL);

statement ok
INSERT INTO t2 VALUES(4,	NULL);

statement ok
INSERT INTO t2 VALUES(5, 66);

statement ok
INSERT INTO t2 VALUES(6, 67);

query I
SELECT sum (a) OVER win FROM t2
  WINDOW win AS (
      ORDER BY b NULLS LAST RANGE BETWEEN 6 FOLLOWING AND UNBOUNDED FOLLOWING
  );
----
9
9
9
9
9
9

query I
SELECT sum (a) OVER win FROM t2
  WINDOW win AS (
      ORDER BY b NULLS LAST RANGE BETWEEN 1 PRECEDING AND 2 PRECEDING
  );
----
NULL
NULL
NULL
9
9
9

query I
SELECT sum (a) OVER win FROM t2
  WINDOW win AS (
      ORDER BY b NULLS LAST RANGE BETWEEN 2 FOLLOWING AND 1 FOLLOWING
  );
----
NULL
NULL
NULL
9
9
9

query I
SELECT sum (a) OVER win FROM t2
  WINDOW win AS (
      ORDER BY b NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 2 PRECEDING
  );
----
9
9
9
NULL
NULL
NULL

query I
SELECT sum (a) OVER win FROM t2
  WINDOW win AS (
      ORDER BY b NULLS FIRST RANGE BETWEEN 2 FOLLOWING AND 1 FOLLOWING
  );
----
9
9
9
NULL
NULL
NULL

query I
SELECT sum (a) OVER win FROM t2
  WINDOW win AS (
      ORDER BY b NULLS LAST RANGE BETWEEN 1000 PRECEDING AND 2 PRECEDING
  );
----
NULL
NULL
1
9
9
9

query I
SELECT sum (a) OVER win FROM t2
  WINDOW win AS (
      ORDER BY b NULLS LAST RANGE BETWEEN 2000 FOLLOWING AND 1000 FOLLOWING
  );
----
NULL
NULL
NULL
9
9
9

query I
SELECT sum (a) OVER win FROM t2
  WINDOW win AS (
      ORDER BY b NULLS FIRST RANGE BETWEEN 1000 PRECEDING AND 2000 PRECEDING
  );
----
9
9
9
NULL
NULL
NULL

query I
SELECT sum (a) OVER win FROM t2
  WINDOW win AS (
      ORDER BY b NULLS FIRST RANGE BETWEEN 2000 FOLLOWING AND 1000 FOLLOWING
  );
----
9
9
9
NULL
NULL
NULL

query I
SELECT min (a) OVER win FROM t2
  WINDOW win AS (
      ORDER BY b NULLS LAST RANGE BETWEEN 6 FOLLOWING AND UNBOUNDED FOLLOWING
  );
----
2
2
2
2
2
2

query I
SELECT min (a) OVER win FROM t2
  WINDOW win AS (
      ORDER BY b NULLS LAST RANGE BETWEEN 1 PRECEDING AND 2 PRECEDING
  );
----
NULL
NULL
NULL
2
2
2

query I
SELECT min (a) OVER win FROM t2
  WINDOW win AS (
      ORDER BY b NULLS LAST RANGE BETWEEN 2 FOLLOWING AND 1 FOLLOWING
  );
----
NULL
NULL
NULL
2
2
2

query I
SELECT min (a) OVER win FROM t2
  WINDOW win AS (
      ORDER BY b NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 2 PRECEDING
  );
----
2
2
2
NULL
NULL
NULL

query I
SELECT min (a) OVER win FROM t2
  WINDOW win AS (
      ORDER BY b NULLS FIRST RANGE BETWEEN 2 FOLLOWING AND 1 FOLLOWING
  );
----
2
2
2
NULL
NULL
NULL

query I
SELECT min (a) OVER win FROM t2
  WINDOW win AS (
      ORDER BY b NULLS LAST RANGE BETWEEN 1000 PRECEDING AND 2 PRECEDING
  );
----
NULL
NULL
1
2
2
2

query I
SELECT min (a) OVER win FROM t2
  WINDOW win AS (
      ORDER BY b NULLS LAST RANGE BETWEEN 2000 FOLLOWING AND 1000 FOLLOWING
  );
----
NULL
NULL
NULL
2
2
2

query I
SELECT min (a) OVER win FROM t2
  WINDOW win AS (
      ORDER BY b NULLS FIRST RANGE BETWEEN 1000 PRECEDING AND 2000 PRECEDING
  );
----
2
2
2
NULL
NULL
NULL

query I
SELECT min (a) OVER win FROM t2
  WINDOW win AS (
      ORDER BY b NULLS FIRST RANGE BETWEEN 2000 FOLLOWING AND 1000 FOLLOWING
  );
----
2
2
2
NULL
NULL
NULL

query I
SELECT sum (a) OVER win FROM t2
  WINDOW win AS (
      ORDER BY b NULLS LAST RANGE BETWEEN 6 FOLLOWING AND UNBOUNDED FOLLOWING
  );
----
9
9
9
9
9
9

query I
SELECT sum (a) OVER win FROM t2
  WINDOW win AS (
      ORDER BY b NULLS LAST RANGE BETWEEN 1 PRECEDING AND 2 PRECEDING
  );
----
NULL
NULL
NULL
9
9
9

query I
SELECT sum (a) OVER win FROM t2
  WINDOW win AS (
      ORDER BY b NULLS LAST RANGE BETWEEN 2 FOLLOWING AND 1 FOLLOWING
  );
----
NULL
NULL
NULL
9
9
9

query I
SELECT sum (a) OVER win FROM t2
  WINDOW win AS (
      ORDER BY b NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 2 PRECEDING
  );
----
9
9
9
NULL
NULL
NULL

query I
SELECT sum (a) OVER win FROM t2
  WINDOW win AS (
      ORDER BY b NULLS FIRST RANGE BETWEEN 2 FOLLOWING AND 1 FOLLOWING
  );
----
9
9
9
NULL
NULL
NULL

query I
SELECT sum (a) OVER win FROM t2
  WINDOW win AS (
      ORDER BY b NULLS LAST RANGE BETWEEN 1000 PRECEDING AND 2 PRECEDING
  );
----
NULL
NULL
1
9
9
9

query I
SELECT sum (a) OVER win FROM t2
  WINDOW win AS (
      ORDER BY b NULLS LAST RANGE BETWEEN 2000 FOLLOWING AND 1000 FOLLOWING
  );
----
NULL
NULL
NULL
9
9
9

query I
SELECT sum (a) OVER win FROM t2
  WINDOW win AS (
      ORDER BY b NULLS FIRST RANGE BETWEEN 1000 PRECEDING AND 2000 PRECEDING
  );
----
9
9
9
NULL
NULL
NULL

query I
SELECT sum (a) OVER win FROM t2
  WINDOW win AS (
      ORDER BY b NULLS FIRST RANGE BETWEEN 2000 FOLLOWING AND 1000 FOLLOWING
  );
----
9
9
9
NULL
NULL
NULL

query I
SELECT max (a) OVER win FROM t2
  WINDOW win AS (
      ORDER BY b NULLS LAST RANGE BETWEEN 6 FOLLOWING AND UNBOUNDED FOLLOWING
  );
----
4
4
4
4
4
4

query I
SELECT max (a) OVER win FROM t2
  WINDOW win AS (
      ORDER BY b NULLS LAST RANGE BETWEEN 1 PRECEDING AND 2 PRECEDING
  );
----
NULL
NULL
NULL
4
4
4

query I
SELECT max (a) OVER win FROM t2
  WINDOW win AS (
      ORDER BY b NULLS LAST RANGE BETWEEN 2 FOLLOWING AND 1 FOLLOWING
  );
----
NULL
NULL
NULL
4
4
4

query I
SELECT max (a) OVER win FROM t2
  WINDOW win AS (
      ORDER BY b NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 2 PRECEDING
  );
----
4
4
4
NULL
NULL
NULL

query I
SELECT max (a) OVER win FROM t2
  WINDOW win AS (
      ORDER BY b NULLS FIRST RANGE BETWEEN 2 FOLLOWING AND 1 FOLLOWING
  );
----
4
4
4
NULL
NULL
NULL

query I
SELECT max (a) OVER win FROM t2
  WINDOW win AS (
      ORDER BY b NULLS LAST RANGE BETWEEN 1000 PRECEDING AND 2 PRECEDING
  );
----
NULL
NULL
1
4
4
4

query I
SELECT max (a) OVER win FROM t2
  WINDOW win AS (
      ORDER BY b NULLS LAST RANGE BETWEEN 2000 FOLLOWING AND 1000 FOLLOWING
  );
----
NULL
NULL
NULL
4
4
4

query I
SELECT max (a) OVER win FROM t2
  WINDOW win AS (
      ORDER BY b NULLS FIRST RANGE BETWEEN 1000 PRECEDING AND 2000 PRECEDING
  );
----
4
4
4
NULL
NULL
NULL

query I
SELECT max (a) OVER win FROM t2
  WINDOW win AS (
      ORDER BY b NULLS FIRST RANGE BETWEEN 2000 FOLLOWING AND 1000 FOLLOWING
  );
----
4
4
4
NULL
NULL
NULL

#==========================================================================

# Reverse bitmask scanning
query II
SELECT b, sum(b) OVER (
    ORDER BY a NULLS LAST RANGE BETWEEN UNBOUNDED PRECEDING AND 10 FOLLOWING
  )
FROM (
	SELECT CASE WHEN b < 70 THEN NULL ELSE 10 END AS a, b
	FROM range(1, 129) tbl(b)
	) t1
ORDER BY 1;
----
1	8256
2	8256
3	8256
4	8256
5	8256
6	8256
7	8256
8	8256
9	8256
10	8256
11	8256
12	8256
13	8256
14	8256
15	8256
16	8256
17	8256
18	8256
19	8256
20	8256
21	8256
22	8256
23	8256
24	8256
25	8256
26	8256
27	8256
28	8256
29	8256
30	8256
31	8256
32	8256
33	8256
34	8256
35	8256
36	8256
37	8256
38	8256
39	8256
40	8256
41	8256
42	8256
43	8256
44	8256
45	8256
46	8256
47	8256
48	8256
49	8256
50	8256
51	8256
52	8256
53	8256
54	8256
55	8256
56	8256
57	8256
58	8256
59	8256
60	8256
61	8256
62	8256
63	8256
64	8256
65	8256
66	8256
67	8256
68	8256
69	8256
70	5841
71	5841
72	5841
73	5841
74	5841
75	5841
76	5841
77	5841
78	5841
79	5841
80	5841
81	5841
82	5841
83	5841
84	5841
85	5841
86	5841
87	5841
88	5841
89	5841
90	5841
91	5841
92	5841
93	5841
94	5841
95	5841
96	5841
97	5841
98	5841
99	5841
100	5841
101	5841
102	5841
103	5841
104	5841
105	5841
106	5841
107	5841
108	5841
109	5841
110	5841
111	5841
112	5841
113	5841
114	5841
115	5841
116	5841
117	5841
118	5841
119	5841
120	5841
121	5841
122	5841
123	5841
124	5841
125	5841
126	5841
127	5841
128	5841

statement ok
DROP DATABASE test_window_range
