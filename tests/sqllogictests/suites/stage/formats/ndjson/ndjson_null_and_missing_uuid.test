statement ok
drop table if exists t_uuid

statement ok
create table t_uuid(id string default uuid(), a int)

statement ok
remove @data/ndjson/unload/uuid

query
copy into @data/ndjson/unload/uuid/ from (select 1 as a)  file_format = (type = ndjson)
----
1 8 8

query error Missing value
copy into t_uuid from @data/ndjson/unload/uuid file_format = (type = ndjson) RETURN_FAILED_ONLY=TRUE

query
select * from t_uuid
----

query
copy into t_uuid from @data/ndjson/unload/uuid file_format = (type = ndjson  missing_field_as=null) force=true RETURN_FAILED_ONLY=TRUE
----

query
select * from t_uuid
----
NULL 1

statement ok
remove @data/ndjson/unload/uuid

query
copy into @data/ndjson/unload/uuid/ from (select 1 as a, null as id)  file_format = (type = ndjson)
----
1 18 18

query
copy into t_uuid from @data/ndjson/unload/uuid file_format = (type = ndjson) RETURN_FAILED_ONLY=TRUE
----

query
select * from t_uuid
----
NULL 1
NULL 1

query
copy into t_uuid from @data/ndjson/unload/uuid file_format = (type = ndjson  null_field_as=null) force=true RETURN_FAILED_ONLY=TRUE
----

query
select * from t_uuid
----
NULL 1
NULL 1
NULL 1

query
copy into @data/ndjson/unload/uuid/ from (select 1 as a, null as id)  file_format = (type = ndjson)
----
1 18 18

statement ok
truncate table t_uuid

query
copy into t_uuid from @data/ndjson/unload/uuid file_format = (type = ndjson null_field_as=field_default) force=true RETURN_FAILED_ONLY=TRUE

query
select uniq(id) from t_uuid
----
2