## Copyright 2023 Databend Cloud
##
## Licensed under the Elastic License, Version 2.0 (the "License");
## you may not use this file except in compliance with the License.
## You may obtain a copy of the License at
##
##     https://www.elastic.co/licensing/elastic-license
##
## Unless required by applicable law or agreed to in writing, software
## distributed under the License is distributed on an "AS IS" BASIS,
## WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
## See the License for the specific language governing permissions and
## limitations under the License.

statement ok
create or replace database test_txn_stream;

statement ok
use test_txn_stream;

statement ok
CREATE TABLE t_append_only(a INT);

statement ok
CREATE STREAM s_append_only ON TABLE t_append_only APPEND_ONLY=true;

statement ok
CREATE STREAM s_append_only_1 ON TABLE t_append_only APPEND_ONLY=true;

statement ok
INSERT INTO t_append_only VALUES(2), (3);

statement ok
CREATE TABLE t_consume_append_only_1(b INT);

statement ok
CREATE TABLE t_consume_append_only_2(b INT);

statement ok
CREATE TABLE t_consume_append_only_3(b INT);

statement ok
CREATE TABLE t_consume_append_only_4(b INT);

statement ok
CREATE TABLE t_consume_append_only_5(b INT);

statement ok
CREATE TABLE t_consume_append_only_6(b INT);

query I
select a from s_append_only;
----
2
3

query I
select count(*) from fuse_snapshot('test_txn_stream','t_append_only');
----
1

statement ok
BEGIN;

statement ok
INSERT INTO t_append_only VALUES(4), (5);

query I
select count(*) from fuse_snapshot('test_txn_stream','t_append_only');
----
2

statement ok
INSERT INTO t_consume_append_only_1 SELECT a FROM s_append_only;

query I
select count(*) from fuse_snapshot('test_txn_stream','t_consume_append_only_1');
----
1

statement ok
INSERT INTO t_consume_append_only_2 SELECT a FROM s_append_only;

query I
select count(*) from fuse_snapshot('test_txn_stream','t_consume_append_only_2');
----
1

statement ok
INSERT INTO t_append_only VALUES(6), (7);

query I
select count(*) from fuse_snapshot('test_txn_stream','t_append_only');
----
2

statement ok
INSERT INTO t_consume_append_only_3 SELECT a FROM s_append_only;

query I
select count(*) from fuse_snapshot('test_txn_stream','t_consume_append_only_3');
----
1

statement ok
INSERT INTO t_consume_append_only_4 SELECT a FROM s_append_only_1;

query I
select count(*) from fuse_snapshot('test_txn_stream','t_consume_append_only_4');
----
1

statement ok
COMMIT;

query I
select count(*) from fuse_snapshot('test_txn_stream','t_append_only');
----
2

query I
select count(*) from fuse_snapshot('test_txn_stream','t_consume_append_only_1');
----
1

query I
select count(*) from fuse_snapshot('test_txn_stream','t_consume_append_only_2');
----
1

query I
select count(*) from fuse_snapshot('test_txn_stream','t_consume_append_only_3');
----
1

query I
select count(*) from fuse_snapshot('test_txn_stream','t_consume_append_only_4');
----
1

statement ok
INSERT INTO t_consume_append_only_5 SELECT a FROM s_append_only;

statement ok
INSERT INTO t_consume_append_only_6 SELECT a FROM s_append_only_1;

query I
SELECT * FROM t_consume_append_only_1 order by b;  -- 2,3,4,5
----
2
3
4
5

query I
SELECT * FROM t_consume_append_only_2 order by b; -- 2,3,4,5
----
2
3
4
5

query I
SELECT * FROM t_consume_append_only_3 order by b; -- 2,3,4,5
----
2
3
4
5

query I
SELECT * FROM t_consume_append_only_4 order by b; -- 2,3,4,5,6,7
----
2
3
4
5
6
7

query I
SELECT * FROM t_consume_append_only_5 order by b; -- 6,7
----
6
7

query I
SELECT * FROM t_consume_append_only_6; -- empty
----

# with consume
statement ok
CREATE TABLE t(a int, b int)

statement ok
INSERT INTO t VALUES(1, 1), (2, 2)

statement ok
CREATE STREAM s1 on TABLE t APPEND_ONLY = true

statement ok
CREATE STREAM s2 on TABLE t APPEND_ONLY = false

statement ok
INSERT INTO t VALUES(3, 3), (4, 4)

statement ok
UPDATE t SET a = 1 WHERE b = 2

query IITB
SELECT a, b, change$action, change$is_update from s1 order by a
----
3 3 INSERT 0
4 4 INSERT 0

query IITB
SELECT a, b, change$action, change$is_update from s2 order by a
----
1 2 INSERT 1
2 2 DELETE 1
3 3 INSERT 0
4 4 INSERT 0

query II
SELECT sum(a), count() from s1 WITH CONSUME
----
7 2

query I
SELECT a from s1
----

query II
SELECT s.a, s.b from s2 WITH CONSUME as s join t on s.a = t.a WHERE s.change$is_update = false order by a
----
3 3
4 4

query I
SELECT a from s2
----

query II
SELECT a, b FROM t order by a, b
----
1 1
1 2
3 3
4 4

statement error 3902
SELECT * FROM t WITH CONSUME


# stream should not be consumed if query goes wrong

statement ok
create or replace table t1(c int);

statement ok
create or replace stream s1 on table t1 APPEND_ONLY=true;

statement ok
insert into t1 values (1);

# single table

statement error 1006
select c/0 from s1 with consume;

# stream s1 should not be consumed
query I
SELECT c FROM s1;
----
1

# multiple tables

statement ok
create or replace table t1(c int);

statement ok
create or replace table t2(c int);

statement ok
create or replace stream s1 on table t1 APPEND_ONLY=true;

statement ok
create or replace stream s2 on table t2 APPEND_ONLY=true;

statement ok
insert into t1 values (1);

statement ok
insert into t2 values (2);


statement error 1006
select c from s1 with consume union select c/0 from s2 with consume;

# stream s1, s2 should not be consumed
query I
SELECT c FROM s1;
----
1

query I
SELECT c FROM s2;
----
2


# stream can be consumed individually

statement ok
create or replace table t1(c int);

statement ok
create or replace table t2(c int);

statement ok
create or replace stream s1 on table t1 APPEND_ONLY=true;

statement ok
create or replace stream s2 on table t2 APPEND_ONLY=true;

statement ok
insert into t1 values (1);

statement ok
insert into t2 values (2);

# only consume s2
query I
select c from s1 union select c from s2 with consume order by c;
----
1
2

# stream s1 should not be consumed
query I
SELECT c FROM s1;
----
1

# stream s2 should be consumed
query I
SELECT c FROM s2;
----


#######################################
# consume inside explicit transaction #
#######################################


statement ok
create or replace table t_1 (
  str varchar
);

statement ok
create or replace stream s_1 on table t_1 append_only = true;

statement ok
insert into t_1 (str) values ('a'), ('b');


# case 1: with consume should rollback-able (implicitly)

statement ok
begin;

query I
select str from s_1 with consume order by str;
----
a
b

statement error 1006
select 1/0;

statement ok
commit;

query I
select str from s_1 order by str;
----
a
b

# case 2: with consume should rollback-able (explicitly)

statement ok
begin;

query I
select str from s_1 with consume order by str;
----
a
b

# inside txn, s_1 is consumed, expects empty result set
query I
select str from s_1;

statement ok
rollback;

query I
select str from s_1 order by str;
----
a
b



# case 3:  mixed with DMLs

statement ok
create table tmp_sink like t_1;

statement ok
begin;

# normal dml
statement ok
insert into tmp_sink select str from s_1;

# changes should not be consumed
query I
select str from s_1 order by str;
----
a
b

# but changes should be captured by insert stmt
query I
select count() from tmp_sink
----
2

# dml and stream consume

statement ok
select str from s_1 with consume;

statement ok
truncate table tmp_sink;

statement ok
insert into tmp_sink select str from s_1;

query I
select count() from tmp_sink
----
0

statement ok
commit;

query I
select str from s_1 order by str;
----


# case 4:  disallows WITH CONSUME inside dml

statement ok
insert into t_1 (str) values ('a'), ('b');

statement error 1005
insert into tmp_sink select str from s_1 with consume;

statement error 1005
copy into tmp_sink select str from s_1 with consume;

# allows explain

# using statement to ignore the result (which may not be deterministic)

statement ok
explain select str from s_1 with consume;

statement ok
explain select str from s_1;

# explain should not consume the stream
query I
select str from s_1 order by str;
----
a
b

statement ok
create or replace table target_1 (
  str varchar
);

statement ok
create or replace table target_2 (
  str varchar
);

statement ok
begin;

statement ok
insert into target_1 select str from s_1;

query I
select str from s_1 with consume order by str;
----
a
b

statement ok
insert into target_2 select str from s_1;

statement ok
commit;

query I
select str from target_1 order by str;
----
a
b

query I
select str from target_2 order by str;
----


statement ok
drop database test_txn_stream;
