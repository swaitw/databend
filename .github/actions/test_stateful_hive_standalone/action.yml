name: "(hive) Test Stateful Standalone"
description: "(hive) Running stateful tests in standalone mode"
runs:
  using: "composite"
  steps:
    - uses: ./.github/actions/setup_test

    # hive cluster setup
    - name: Hive Cluster Setup
      shell: bash
      run: |
        docker-compose -f "./docker/it-hive/hive-docker-compose.yml" up --quiet-pull -d

    # Wait for h2 to come alive
    #  INSIDE the container of service "hive-server", wait for port 10000 being listened:
    #  - check if port 10000 is available, per sec
    #  - failed if not available during 50s (typically, service will be brought up in about 30s, in github)
    - name: Wait for hiveserver2
      shell: bash
      run: |
        docker-compose -f "./docker/it-hive/hive-docker-compose.yml" exec -T hive-server bash -c "timeout 50 bash -c 'until nc -z localhost 10000; do sleep 1; echo "waiting..."; done'"

    # hive test data setup, to be refined
    # hasn't find a way to read hdfs data from docker isolated network yet, use local fs not hdfs to do the ci
    # hive data is loaded to hdfs://namenode:8020/user/hive/warehouse/t_1/,  we copy a mirror data to local fs .databend/stateless_test_data/user/hive/warehouse/t_1/
    # databend actually read data from local fs
    - name: Hive Create Table&Load Data
      shell: bash
      run: |
        docker-compose -f "./docker/it-hive/hive-docker-compose.yml" exec -T hive-server bash -c "/opt/hive/bin/beeline -u jdbc:hive2://127.0.0.1:10000 -e 'CREATE TABLE t_1 (id string, t_bool boolean, t_float float, t_double double, t_data date, t_array array<int>, t_array2 array<string>) stored as parquet;'"
        docker-compose -f "./docker/it-hive/hive-docker-compose.yml" exec -T hive-server bash -c "/opt/hive/bin/beeline -u jdbc:hive2://127.0.0.1:10000 -e 'load data local inpath \"/databend-data/t_1/t_1.parquet\" OVERWRITE into table t_1;'"
        mkdir -p .databend/stateless_test_data/user/hive/warehouse/
        cp -r tests/data/hive/t_1 .databend/stateless_test_data/user/hive/warehouse/

    - name: Hive Create Partition Table&Load Data
      shell: bash
      run: |
        docker-compose -f "./docker/it-hive/hive-docker-compose.yml" exec -T hive-server bash -c "/opt/hive/bin/beeline -u jdbc:hive2://127.0.0.1:10000 -e 'CREATE TABLE if not exists customer_p2 ( foo VARCHAR(25) , c_region2 VARCHAR(25) , c_nation2 VARCHAR(10)) partitioned by (c_region VARCHAR(12), c_nation VARCHAR(15)) stored as parquet;'"
        docker-compose -f "./docker/it-hive/hive-docker-compose.yml" exec -T hive-server bash -c "/opt/hive/bin/beeline -u jdbc:hive2://127.0.0.1:10000 -e 'load data local inpath \"/databend-data/customer_p2/c_region=ASIA/c_nation=CHINA\" OVERWRITE into table customer_p2 partition(c_region = \"ASIA\", c_nation = \"CHINA\");'"
        docker-compose -f "./docker/it-hive/hive-docker-compose.yml" exec -T hive-server bash -c "/opt/hive/bin/beeline -u jdbc:hive2://127.0.0.1:10000 -e 'load data local inpath \"/databend-data/customer_p2/c_region=ASIA/c_nation=JAPAN\" OVERWRITE into table customer_p2 partition(c_region = \"ASIA\", c_nation = \"JAPAN\");'"
        docker-compose -f "./docker/it-hive/hive-docker-compose.yml" exec -T hive-server bash -c "/opt/hive/bin/beeline -u jdbc:hive2://127.0.0.1:10000 -e 'load data local inpath \"/databend-data/customer_p2/c_region=EUROPE/c_nation=FRANCE\" OVERWRITE into table customer_p2 partition(c_region = \"EUROPE\", c_nation = \"FRANCE\");'"
        docker-compose -f "./docker/it-hive/hive-docker-compose.yml" exec -T hive-server bash -c "/opt/hive/bin/beeline -u jdbc:hive2://127.0.0.1:10000 -e 'load data local inpath \"/databend-data/customer_p2/c_region=EUROPE/c_nation=RUSSIA\" OVERWRITE into table customer_p2 partition(c_region = \"EUROPE\", c_nation = \"RUSSIA\");'"
        docker-compose -f "./docker/it-hive/hive-docker-compose.yml" exec -T hive-server bash -c "/opt/hive/bin/beeline -u jdbc:hive2://127.0.0.1:10000 -e 'load data local inpath \"/databend-data/customer_p2/c_region=EUROPE/c_nation=GERMANY\" OVERWRITE into table customer_p2 partition(c_region = \"EUROPE\", c_nation = \"GERMANY\");'"
        cp -r tests/data/hive/customer_p2 .databend/stateless_test_data/user/hive/warehouse/

    - name: Run Stateful Tests with Standalone mode
      shell: bash
      env:
        LD_LIBRARY_PATH: ${{ env.JAVA_HOME }}/lib/server:${{ env.LD_LIBRARY_PATH }}
      run: |
        bash ./scripts/ci/ci-run-stateful-hive-tests-standalone.sh

    - name: Stop containers
      if: always()
      shell: bash
      run: docker-compose -f "./docker/it-hive/hive-docker-compose.yml" down
