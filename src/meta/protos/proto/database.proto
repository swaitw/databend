// Copyright 2022 Datafuse Labs.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// The identifier of a database by name. Names can be changed.
// There is no guarantee that two get-database request by name will return the
// same instance.

syntax = "proto3";

package databend_proto;

import "share.proto";
import "tenant.proto";

message ShareDbId {
  oneof db_id {
    ShareUsageDbId usage = 1;
    ShareReferenceDbId reference = 2;
  }
}

message ShareUsageDbId {
  uint64 ver = 100;
  uint64 min_reader_ver = 101;

  uint64 id = 1;
}

message ShareReferenceDbId {
  uint64 ver = 100;
  uint64 min_reader_ver = 101;

  uint64 id = 1;
}

// DatabaseMeta is a container of all non-identity information.
message DatabaseMeta {
  uint64 ver = 100;
  uint64 min_reader_ver = 101;

  // Database engine, like github engine.
  string engine = 5;

  // Database engine options, like github engine <token>.
  map<string, string> engine_options = 6;

  // Database options.
  map<string, string> options = 4;

  // The time database created.
  string created_on = 20;

  // The time database updated.
  string updated_on = 21;

  // Comment about this database.
  string comment = 22;

  // The time table dropped.
  optional string drop_on = 23;

  // Indicates whether garbage collection is currently in progress for this dropped database.
  //
  // If it is in progress, the database should not be un-dropped, because the data may be incomplete.
  bool gc_in_progress = 29;

  repeated uint64 shared_by = 24;

  optional TIdent from_share = 25;

  // Now the owner is stored independently in the meta. Prefix with __fd_object_owners
  // optional Ownership owner = 26;
  reserved 26;

  // share endpoint name
  optional string using_share_endpoint = 27;

  // share db id
  optional ShareDbId from_share_db_id = 28;

  reserved 30;
}

// Save db name id list history.
message DbIdList {
  uint64 ver = 100;
  uint64 min_reader_ver = 101;

  repeated uint64 ids = 1;
}
